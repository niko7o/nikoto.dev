{"version":3,"sources":["components/panels/Onboarding.js","components/AnimatedButton.js","components/LazyImage.js","components/ProjectDetails.js","components/panels/Projects.js","components/SlidingPanel.js","utils/terminal.js","components/Terminal.js","components/Footer.js","contexts/panel-context.js","components/Homepage.js","serviceWorker.js","index.js"],"names":["Onboarding","isVisible","div","initial","y","animate","transition","type","stiffness","default","duration","className","role","aria-label","src","alt","href","target","rel","width","AnimatedButton","buttonText","button","whileHover","scale","whileTap","LazyImage","imageUrl","useState","loaded","setLoaded","imageClasses","onLoad","ProjectDetails","project","name","link","image","technologies","projects","digitalRain","Projects","SlidingPanel","step","panelContext","commandHelperHints","result","style","color","loading","Terminal","commandHistory","setCommandHistory","command","setCommand","map","cmd","i","key","onKeyDown","hasPressedEnter","push","updateStep","autoFocus","value","onChange","e","tabIndex","placeholder","Footer","data-color-scheme","data-size","data-show-count","PanelContext","React","createContext","PanelProvider","Provider","Homepage","Consumer","currentStep","setCurrentStep","desiredStep","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.89cd40b9.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nimport { motion } from \"framer-motion\";\r\n\r\nimport './Onboarding.scss';\r\n\r\nconst Onboarding = ({ isVisible }) => (\r\n  isVisible && (\r\n      <motion.div\r\n        initial={{ y: -400 }} \r\n        animate={{ y: 0 }}\r\n        transition={{\r\n          y: { type: \"spring\", stiffness: 100 },\r\n          default: { duration: 1 },\r\n        }}\r\n      >\r\n        <div className=\"onboarding\">\r\n          <div className=\"onboarding__information-basic\">\r\n            <p className=\"onboarding__name\">Heya! \r\n              <span role=\"img\" className=\"onboarding__waving-hand\" aria-label=\"wave\">ðŸ‘‹</span> \r\n              I'm <span className=\"onboarding__name--heavy\">nikoto.</span>\r\n            </p>\r\n            <p className=\"onboarding__occupation\">\r\n              Software Engineer<br />\r\n              @ Spotahome  <img className=\"onboarding__spotahome\" src=\"./images/spotahome.jpg\" alt=\"spotahome logo\" />\r\n            </p>\r\n          </div>\r\n\r\n          <code className=\"onboarding__teaser\">Want to know me better? Use the terminal. <br />Start by typing \"help\" and pressing enter.</code>\r\n\r\n          <div className=\"onboarding__information-socials\">\r\n            <a \r\n              href=\"https://github.com/nikotomad\" \r\n              target=\"_blank\" \r\n              rel=\"noopener noreferrer\" \r\n              className=\"onboarding__information-socials-link\"\r\n            >\r\n              <img \r\n                className=\"onboarding__information-icon\" \r\n                src=\"./images/socials/icon-github.svg\" \r\n                width=\"40\"\r\n                alt=\"github\"\r\n              />\r\n              Github\r\n            </a>\r\n            <a \r\n              href=\"https://www.linkedin.com/in/nikolaasverlee/\" \r\n              target=\"_blank\" \r\n              rel=\"noopener noreferrer\" \r\n              className=\"onboarding__information-socials-link\"\r\n            >\r\n              <img \r\n                className=\"onboarding__information-icon\" \r\n                src=\"./images/socials/icon-linkedin.webp\" \r\n                width=\"40\"\r\n                alt=\"linkedin\"\r\n              />\r\n              Linkedin\r\n            </a>\r\n          </div>\r\n        </div>\r\n      </motion.div>\r\n    )\r\n  );\r\n\r\nexport default Onboarding;","import React from 'react';\r\n\r\nimport { motion } from \"framer-motion\";\r\n\r\nimport './AnimatedButton.scss';\r\n\r\nconst AnimatedButton = ({ buttonText, className }) => (\r\n  <motion.button\r\n    className={`animated-button ${className ? className : ''}`}\r\n    whileHover={{ scale: 1.08 }}\r\n    whileTap={{ scale: 0.95 }}\r\n  >\r\n    <img className=\"icon-eye\" src=\"./images/icons/eye.png\" alt=\"demo\" />\r\n    {buttonText}\r\n  </motion.button>\r\n)\r\n\r\nexport default AnimatedButton;","import React, { useState } from 'react';\r\n\r\nimport './LazyImage.scss';\r\n \r\nconst LazyImage = ({ imageUrl, alt, className }) => {\r\n  const [loaded, setLoaded] = useState(false);\r\n  \r\n  const handleImageLoaded = () => {\r\n    setLoaded(true);\r\n  }\r\n  \r\n  const imageClasses = \r\n    `lazy-image ${loaded ? 'lazy-image--loaded' : ''} ${!!className && className}`;\r\n\r\n  return (\r\n    <div className=\"lazy-image-container\">\r\n      <img src={imageUrl} className={imageClasses} onLoad={handleImageLoaded} alt={alt} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default LazyImage;","import React from 'react';\r\n\r\nimport AnimatedButton from './AnimatedButton';\r\n\r\nimport LazyImage from './LazyImage';\r\n\r\nimport './ProjectDetails.scss';\r\n\r\nconst ProjectDetails = ({ project }) => (\r\n  <div className=\"project-details\">\r\n    <h2 className=\"project-details__title\">{project.name}</h2>\r\n    \r\n    <div className=\"project-details__container\">\r\n      <div className=\"project-details__demo\">\r\n        <a href={project.link} target=\"blank\" rel=\"noopener noreferrer\">\r\n          <AnimatedButton buttonText={'View Demo'} className=\"project-details__button\"/>\r\n        </a>\r\n      </div>\r\n\r\n      <LazyImage imageUrl={project.image} className=\"project-details__image\" />\r\n    \r\n    </div>\r\n\r\n    <div className=\"project-details__description\">\r\n      <span className=\"project-details__description-badge\">Technologies</span>\r\n      <span className=\"project-details__description-info\">{project.technologies}</span>\r\n    </div>\r\n  </div>\r\n)\r\n\r\nexport default ProjectDetails;","import React from 'react';\r\n\r\nimport { motion } from \"framer-motion\";\r\n\r\nimport ProjectDetails from '../ProjectDetails';\r\n\r\nimport './Projects.scss';\r\n\r\nconst projects = {\r\n  digitalRain: {\r\n    name: 'digital rain.',\r\n    link: 'https://nikotomad.github.io/matrix-rain',\r\n    image: './images/projects/matrix-rain-min.gif',\r\n    technologies: 'P5.JS, Canvas, Javascript'\r\n  }\r\n}\r\n\r\nconst Projects = ({ isVisible }) => (\r\n  isVisible && (\r\n    <>\r\n      <motion.div\r\n        initial={{ y: -1000 }} \r\n        animate={{ y: 0 }} \r\n        transition={{\r\n          y: { type: \"spring\", stiffness: 100 },\r\n          default: { duration: 1 },\r\n        }}\r\n      >\r\n        <div className=\"projects\">\r\n          <ProjectDetails project={projects.digitalRain} />\r\n        </div>\r\n      </motion.div>\r\n     </>\r\n  )\r\n);\r\n\r\nexport default Projects;\r\n","import React from 'react';\r\n\r\nimport Onboarding from './panels/Onboarding';\r\nimport Projects from './panels/Projects';\r\n\r\nimport './SlidingPanel.scss';\r\n\r\nconst SlidingPanel = ({ panelContext: { step } }) => {\r\n  return (\r\n    <div className=\"sliding-panel\">\r\n      <Onboarding isVisible={step === 'onboarding'} />\r\n      <Projects isVisible={step === 'projects'} />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default SlidingPanel;","import React from 'react';\r\n\r\nexport const commandHelperHints = {\r\n  'help': {\r\n    result: \r\n    <>\r\n      <p style={{ color: '#c6dcc6' }}>[available commands are]:</p>\r\n      <p>- home</p>\r\n      <p>- about</p>\r\n      <p>- skills</p>\r\n      <p>- projects</p>\r\n      <p>- team</p>\r\n      <p>- clear</p>\r\n    </>\r\n  },\r\n  'about': {\r\n    result: 'Based in Madrid. Software Engineer. Worst engineer at the company but third coolest.'\r\n  },\r\n  'team': {\r\n    result: <img loading=\"eager\" src=\"./images/broccoli.png\" alt=\"brocolli\" width=\"50\"/>\r\n  },\r\n  'skills': {\r\n    result: \r\n    <>\r\n      <p>Frontend: React, React Native, Redux</p>\r\n      <p>Backend & DB: Node.js + Mongo</p>\r\n      <p>Testing: Jest, Cypress, Detox</p>\r\n      <p>Other: Test driven development, BDD, Kibana, Grafana</p>\r\n    </>\r\n  },\r\n  'clear': {\r\n    result: ''\r\n  },\r\n  'whois weapon': {\r\n    result: <img src=\"./images/avatar-niko.jpg\" alt=\"weapon\" width=\"100\"/>\r\n  },\r\n  'home': {\r\n    result: 'Navigated to home.'\r\n  },\r\n  'projects': {\r\n    result: 'This section is still under construction. Feel free to check back on it later! You can go back to the first screen by writing \"home\" or look for commands with \"help\"'\r\n  }\r\n}","/* eslint-disable no-mixed-operators */\r\nimport React, { useState } from 'react';\r\n\r\nimport { commandHelperHints } from '../utils/terminal';\r\n\r\nimport './Terminal.scss';\r\n\r\nconst TERMINAL_PATH_PREFIX = \"/dev/guest\";\r\n\r\nconst Terminal = ({ panelContext }) => {\r\n  const [commandHistory, setCommandHistory] = useState([]);\r\n  const [command, setCommand] = useState('');\r\n\r\n  const handleInputChange = e => \r\n    setCommand(e.target.value);\r\n\r\n  const handleTerminalKeyPressed = ({ key }) => {\r\n    const hasPressedEnter = key === 'Enter';\r\n    \r\n    if (command && key === 'Enter') {\r\n      commandHistory.push(command);\r\n      setCommand('');\r\n    }\r\n\r\n    if (command === 'home' && hasPressedEnter) {\r\n      panelContext.updateStep('onboarding')\r\n    }\r\n\r\n    if (command === 'projects' && hasPressedEnter) {\r\n      panelContext.updateStep('projects')\r\n    }\r\n\r\n    if (command === 'clear' && hasPressedEnter) {\r\n      setCommandHistory([]);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"terminal\">\r\n      <div className=\"terminal__navbar\">\r\n        <span className=\"terminal__navbar-close\" />\r\n      </div>\r\n      <div className=\"terminal__screen\">\r\n        <div className=\"terminal__screen-results\">\r\n          {commandHistory && commandHistory.map((cmd, i) => (\r\n            <div className=\"terminal__screen-row\" key={`${cmd}${i}`}>\r\n              <p className=\"terminal__command\">\r\n                {`${TERMINAL_PATH_PREFIX} â†’ ${cmd}`}\r\n              </p>\r\n              <p className=\"terminal__result\">\r\n                {\r\n                  commandHelperHints[cmd] && commandHelperHints[cmd].result \r\n                  || 'Command not found. Type \"help\" for more info.'\r\n                }\r\n              </p>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n      <div className=\"terminal__actions\" onKeyDown={handleTerminalKeyPressed}>\r\n          <span className=\"terminal__actions-symbol\">{`$ ${TERMINAL_PATH_PREFIX}`}</span>\r\n          <input \r\n            autoFocus \r\n            type=\"text\" \r\n            className=\"terminal__actions-command\" \r\n            value={command}\r\n            onChange={handleInputChange}\r\n            tabIndex=\"0\"\r\n            placeholder=\"type command..\"\r\n          />\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Terminal;\r\n","import React from 'react';\r\n\r\nimport './Footer.scss';\r\n\r\nconst Footer = () => (\r\n  <div className=\"footer\">\r\n    <a className=\"github-button\" href=\"https://github.com/nikotomad\" data-color-scheme=\"no-preference: dark; light: dark; dark: dark;\" data-size=\"large\" data-show-count=\"true\" aria-label=\"Follow @nikotomad on GitHub\">@nikotomad</a>\r\n  </div>\r\n);\r\n\r\nexport default Footer;","import React from 'react';\r\n\r\nconst PanelContext = React.createContext();\r\n\r\nexport const PanelProvider = PanelContext.Provider\r\nexport const PanelConsumer = PanelContext.Consumer\r\n\r\nexport default PanelContext;","import React, { useState } from 'react';\r\n\r\nimport SlidingPanel from './SlidingPanel';\r\nimport Terminal from './Terminal';\r\nimport Footer from './Footer';\r\n\r\nimport { PanelProvider } from '../contexts/panel-context';\r\n\r\nimport './Homepage.scss';\r\n\r\nconst DEFAULT_INITIAL_STEP = 'onboarding';\r\n\r\nconst Homepage = () => {\r\n  const [currentStep, setCurrentStep] = useState(DEFAULT_INITIAL_STEP);\r\n\r\n  const panelContext = {\r\n    step: currentStep,\r\n    updateStep: desiredStep => setCurrentStep(desiredStep)\r\n  }\r\n  \r\n  return (\r\n    <PanelProvider value={panelContext}>\r\n      <div className=\"homepage\">\r\n        <SlidingPanel panelContext={panelContext} />\r\n        <Terminal panelContext={panelContext} />\r\n        <Footer />\r\n      </div>\r\n    </PanelProvider>\r\n  )\r\n}\r\n\r\nexport default Homepage;","const isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    window.location.hostname === '[::1]' ||\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        checkValidServiceWorker(swUrl, config);\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              console.log('Content is cached for offline use.');\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport Homepage from './components/Homepage';\r\n\r\nimport './resets.css';\r\n\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <Homepage />,\r\n  document.getElementById('root')\r\n);\r\n\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}